buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.6"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.18"
        classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.7.1"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.8.4"
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://packages.confluent.io/maven' }
        jcenter()
    }
    ext {
        protoVersion = '3.6.0'
        grpcVersion = '1.13.1'
    }
}

configure(subprojects.findAll { it.sourceSetTypes.contains("java") }) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'net.ltgt.apt'
    apply plugin: 'net.ltgt.apt-idea'
    apply plugin: 'com.github.sherter.google-java-format'

    dependencies {
        compile group: 'org.projectlombok', name: 'lombok', version: '1.18.0'
        annotationProcessor 'org.projectlombok:lombok:1.18.0'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '3.10.0'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.19.0'
    }
}

configure(subprojects.findAll { it.sourceSetTypes.contains("spring-boot-lib") }) {

    dependencies {
        compile project(':common')
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBootVersion
        compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.7.RELEASE'
    }
}

configure(subprojects.findAll { it.sourceSetTypes.contains("application") }) {
    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'

    jar {
        enabled = true
    }
    bootJar {
        classifier = 'boot'
    }
}

configure(subprojects.findAll { it.sourceSetTypes.contains("jpa") }) {
    dependencies {
        compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.0.8.RELEASE'
        compile group: 'org.hibernate', name: 'hibernate-core', version: '5.3.3.Final'
        compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
        compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.2.2'
    }
}

configure(subprojects.findAll { it.sourceSetTypes.contains("grpc") }) {
    apply plugin: 'com.google.protobuf'

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protoVersion}"
        }

        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
            }
        }

        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    dependencies {
        compile group: 'com.google.protobuf', name: 'protobuf-java', version: protoVersion
        compile group: 'io.grpc', name: 'grpc-netty', version: grpcVersion
        compile group: 'io.grpc', name: 'grpc-protobuf', version: grpcVersion
        compile group: 'io.grpc', name: 'grpc-stub', version: grpcVersion
        compile(group: 'me.dinowernli', name: 'java-grpc-prometheus', version: '0.3.0') {
            exclude group: "io.grpc"
        }

        testCompile group: 'io.grpc', name: 'grpc-testing', version: grpcVersion
    }
}


project(":app") {
    ext {
        sourceSetTypes = ["java"]
    }
}


/**
 * Gradle wrapper.
 */
wrapper {
    gradleVersion = '4.8.1'
}